version: "3.9"

services:
  # webserver:
  #   image: tylerlwsmith:tinkerlog-next-webserver:${BUILD_TAG:-latest}
  #   container_name: tinerklog-next-webserver
  #   build:
  #     context: .
  #     target: ${BUILD_TARGET:-development}
  #     dockerfile: dockerfiles/webserver.Dockerfile
  #   volumes:
  #     - ./webserver/Caddyfile:/etc/caddy/Caddyfile
  #     - ./webapp:/srv/app
  #     - caddy_data:/data
  #     - caddy_config:/config
  #   restart: unless-stopped
  #   ports:
  #     - 127.0.0.1:8080:80
  #   enviornment:
  #     SITE_HOST: ${SITE_HOST}

  webapp:
    image: tylerlwsmith:tinkerlog-next-webapp
    container_name: tinkerlog-next-webapp
    build:
      context: .
      target: ${BUILD_TARGET:-development}
      dockerfile: dockerfiles/webapp.Dockerfile
      args:
        USER_UID: ${USER_UID}
        USER_GID: ${USER_GID}
    volumes:
      - ./webapp:/srv/app
    depends_on:
      - database
    restart: unless-stopped
    ports:
      - 127.0.0.1:4000:4000
    environment:
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}

  database:
    image: postgres:15.1-alpine
    container_name: tinkerlog-next-database
    restart: unless-stopped
    volumes:
      - database:/var/lib/postgresql/data
    ports:
      - 127.0.0.1:${DB_PORT:-5432}:5432
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

volumes:
  database:
  caddy_data:
  caddy_config:
